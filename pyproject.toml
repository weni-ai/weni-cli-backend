[tool.poetry]
name = "weni-cli-backend"
version = "0.1.0"
description = "FastAPI backend for Weni CLI"
authors = ["Paulo Bernardo <paulo.bernardo@vtex.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.9"
uvicorn = "^0.34.0"
pydantic = "^2.10.6"
pydantic-settings = "^2.8.1"
python-dotenv = "^1.0.1"
python-multipart = "^0.0.20"
boto3 = "^1.37.3"
requests = "^2.32.3"
httpx = "^0.28.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.9.8"
mypy = "^1.15.0"
pytest = "^8.3.4"
pytest-cov = "^6.0.0"
types-boto3 = "^1.37.3"
boto3-stubs = {extras = ["lambda"], version = "^1.37.3"}
types-requests = "^2.32.0.20241016"
pytest-mock = "^3.14.0"
requests-mock = "^1.12.1"
pytest-asyncio = "^0.25.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 119
target-version = "py312"
lint.select = ["E", "F", "B", "I", "N", "UP", "PL"]
lint.ignore = ["PLR0911"]

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.pytest]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
testpaths = ["app"]
addopts = "--strict-markers -v"

[tool.pytest.ini_options]
addopts = "--cov=app --cov-report=term-missing --strict-markers -v"
testpaths = ["app"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/.pytest_cache/*",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]
